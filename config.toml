[cache]
# If use_cache is True, then the pull step for all data sources will be skipped in dodo.py
use_cache = true

[data_sources]

## Public data sets. No subscription needed, no api key needed.
# Set to true to download the data
fed_yield_curve = true
he_kelly_manela = true
ken_french_data_library = true
nyu_call_report = true
open_source_bond = true

## Subscription data sets. Subscription needed, api key needed.
# Set to false if subscription is available, data will be pulled from source
bloomberg_terminal = true
wrds_bank_premium = true
wrds_bond_returns = true
wrds_compustat = true
wrds_crsp = true
wrds_crsp_compustat = true
wrds_datastream = true
wrds_fx = true
wrds_markit = true
wrds_mergent = true
wrds_optionmetrics = false

[models]
# Statistical Models (LocalForecastingModel)
arima = true  # ARIMA - Autoregressive Integrated Moving Average model
ets = true  # ETS - Exponential Smoothing (Error, Trend, Seasonal) state space model
simple_exponential_smoothing = true  # Simple Exponential Smoothing - basic smoothing for level-only data
tbats = true  # TBATS - Exponential smoothing with Box-Cox transformation, ARMA errors, Trend and Seasonal
theta = true  # Theta Method - simple decomposition method that performs well on M3 competition
prophet = true  # Prophet - Facebook's additive model for time series with strong seasonal effects

# Regression Models (GlobalForecastingModel)
pr = true  # Polynomial Regression - fits polynomial functions to capture non-linear trends
catboost = true  # CatBoost - gradient boosting optimized for categorical features and ordered data

# PyTorch (Lightning)-based Models (GlobalForecastingModel)
# Basic Neural Networks
ffnn = true  # Feed-Forward Neural Network - simple fully connected network for time series
deepar = true  # DeepAR - Amazon's probabilistic RNN for forecasting with uncertainty estimates
wavenet = true  # WaveNet - dilated causal convolutions originally for audio generation

# Linear Models (LTSF-Linear family)
dlinear = true  # D-Linear - decomposition-based linear model for long-term forecasting
nlinear = true  # N-Linear - normalization-based linear model handling distribution shifts

# N-BEATS/N-HiTS family
nbeats = true  # N-BEATS - Neural Basis Expansion Analysis for interpretable forecasting
nhits = true  # N-HiTS - Neural Hierarchical Interpolation for long-horizon forecasting

# Transformer Models
transformer = true  # Transformer - vanilla transformer architecture adapted for time series
autoformer = true  # Autoformer - Auto-Correlation decomposition transformer
informer = true  # Informer - ProbSparse self-attention for efficient long sequence forecasting
patchtst = true  # PatchTST - channel-independent patching for multivariate time series
temporal_fusion_transformer = true  # TFT - Temporal Fusion Transformer with interpretable insights

# Other Advanced Models
tide = true  # TiDE - Time Series Dense Encoder using residual blocks without attention
timesfm = true  # TimesFM - Google's foundation model pre-trained on 100B timepoints

[reports]
is_latex_installed = true
